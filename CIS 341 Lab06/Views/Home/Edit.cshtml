@model ListingDTO
@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Listing</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ListingID" />
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <!-- Render the dropdown for selecting the store.
                    Note that the asp-for maps to StoreID for model binding.
                    The values for the list are pulled from the list added to ViewBag
                    in the controller.
                    The label renders the display name for the property from the DTO.
                -->
                <label asp-for="StoreName" class="control-label"></label>
                <select class="form-select" asp-for="StoreID" asp-items="ViewBag.StoreList">
                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
